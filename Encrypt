for i, bot in pairs(getBots()) do
    if getBot().name:upper() == bot.name:upper() then
        pcallBot = i
    end
end

initialize = {}
local customizable = {
    index = 1,
    indexDrop = 1,
    indexTake = 1,
    tileX = 1,
    initX = posX - 1,
    initY = posY - 1
}

customizable.randomLetter = function()
    local withnum = "ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789"
    local generate = ""
    for i = 1,10 do
        local randomnumber = math.random(1,#withnum)
        local acaknomor = string.sub(withnum,randomnumber,randomnumber)
        generate = generate..acaknomor
    end
    return generate
end

customizable.split = function(str, ptr)
    if not ptr then 
        ptr = "%s"
    end
    local tbl = {}
    for string in string.gmatch(str, ptr) do
        table.insert(tbl, string) 
    end
    return tbl
end

customizable.initBot = function()
    if getBot().status == BotStatus.online then
        return "Online"
    elseif getBot().status == BotStatus.account_banned  then
        return "Suspended"
    elseif getBot().status == BotStatus.error_connecting  then
        return "Ercon"
    elseif getBot().status == BotStatus.maintenance then
        return "Maintenance"
    elseif getBot().status == BotStatus.changing_subserver then
        return "Changing Subserver"
    else
        return "Disconnect"
    end
end

customizable.initStatus = function()
    str = ""
    for _, bot in pairs(getBots()) do
        str = str.."\n["..bot.level.."]||"..string.upper(bot.name).."||" 
    end
    return str
end

customizable.initWorld = function()
    str = ""
    for _, bots in pairs(getBots()) do
        str = str.."\n||"..string.upper(bots:getWorld().name).."||" 
    end
    return str
end

customizable.initOnStorage = function()
    str = ""
    for i = 1, #storagetake do
        local world = customizable.split(storagetake[i],"[^|]+")[1]
        str = str.."\n||"..world.."|| : "..(initialize[world] or "?")..""
    end
    return str
end

customizable.initOutStorage = function()
    str = ""
    for i = 1, #storagedrop do
        local world = customizable.split(storagedrop[i],"[^|]+")[1]
        str = str.."\n||"..world.."|| : "..(initialize[world] or "?")..""
    end
    return str
end

customizable.itemFloat = function(id)
    return getBot():getWorld().growscan:getObjects()[id] or 0
end

customizable.initializeBots = function()
	if linkbotinfo ~= "x" then
        local text = [[
            $webHookUrl = "]]..linkbotinfo..[[/messages/]]..messageidbotinfo..[["
            $payload = @{
                username = "Caramoy's"
                embeds = @(
                    @{
                        title = "Caramoy Syndicate [https://discord.com/invite/fTTKW8vvuq]"
                        color = "]]..math.random(111111,999999)..[["
                        fields = @(
                            @{
                                name = "World Take"
                                value = "]]..customizable.initOnStorage()..[["
                                inline = "false"
                            }
                            @{
                                name = "World Drop"
                                value = "]]..customizable.initOutStorage()..[["
                                inline = "false"
                            }
                        )
                        footer = @{
                            text = "[Lucifer] : Move WTW Script`nLast update : ]]..(os.date("!%a %b %d, %Y at %I:%M %p", os.time() + 7 * 60 * 60))..[["
                        }
                    }
                )
            }
            
            [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
            Invoke-RestMethod -Uri $webHookUrl -Body ($payload | ConvertTo-Json -Depth 4) -Method Patch -ContentType 'application/json'
        ]]
        local pipe = io.popen("powershell -command -", "w")
        pipe:write(text)
        pipe:close()
    end
end

customizable.botStatics = function(text,execution)
    if webhookstatuslink ~= "x"  then
        text = [[
            $webHookUrl = "]]..webhookstatuslink..[["
            $payload = @{
                username = "Caramoy's"
                "content" = "@everyone"
                embeds = @(
                    @{
                        color = "]]..math.random(111111,999999)..[["
                        fields = @(
                            @{
                                name = ""
                                value = "]]..text..[["
                                inline = "false"
                            }
                        )
                        footer = @{
                            text = "]]..execution..[["
                        }
                    }
                )
            }
            
            [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
            Invoke-RestMethod -Uri $webHookUrl -Body ($payload | ConvertTo-Json -Depth 4) -Method Post -ContentType "application/json"
        ]]
        local file = io.popen("powershell -command -", "w")
        file:write(text)
        file:close()
    end
end

customizable.reconnect = function(world,id,x,y)
    if getBot():getPing() == 0 then
        getBot():disconnect()
        sleep(2000)
    end
    if not getBot():isInWorld(world:upper()) and getBot().status == BotStatus.online then 
        customizable.botStatics(""..getBot().name.." at another world??","Status Script : Running")
        while not getBot():isInWorld(world:upper()) do
            getBot():sendPacket(3,"action|join_request\nname|"..world:upper().."\ninvitedWorld|0")
            sleep(delaywarp * 1000)
        end
        if id ~= "" then
            while getTile(getBot().x,getBot().y).fg == 6 do
                getBot():sendPacket(3,"action|join_request\nname|" ..world:upper().."|"..id:upper().."\ninvitedWorld|0")
                sleep(delaywarp * 1000)
            end
        end
        if x and y then
            while getBot().x ~= x or getBot().y ~= y do
                getBot():findPath(x,y)
                sleep(150)
            end
        end
        customizable.botStatics(""..getBot().name.." success to joining world again","Status Script : Running")
    end
    if getBot().status ~= BotStatus.online then
        customizable.botStatics(""..getBot().name.." status is "..customizable.initBot().."","Status Script : Running")
        while getBot().status ~= BotStatus.online do
            getBot():connect()
            if getBot().status == BotStatus.account_banned then
                customizable.botStatics(""..getBot().name.." status is "..customizable.initBot().."","Status Script : Stopped, Reason : Bot status "..customizable.initBot().."")
                getBot():stopScript()
            end
            if getBot().status == BotStatus.maintenance then
                sleep(delaymaintenance * 60000)
            else
                sleep(delayreconnect * 1000)
            end
        end
        while not getBot():isInWorld(world:upper()) do
            getBot():sendPacket(3,"action|join_request\nname|"..world:upper().."\ninvitedWorld|0")
            sleep(delaywarp * 1000)
        end
        if id ~= "" then
            while getTile(getBot().x,getBot().y).fg == 6 do
                getBot():sendPacket(3,"action|join_request\nname|" ..world:upper().."|"..id:upper().."\ninvitedWorld|0")
                sleep(delaywarp * 1000)
            end
        end
        if x and y then
            while getBot().x ~= x or getBot().y ~= y do
                getBot():findPath(x,y)
                sleep(150)
            end
        end
        customizable.botStatics(""..getBot().name.." status is "..customizable.initBot().."","Status Script : Running")
    end
end

customizable.warp = function(world,door)
    name = world
    if door ~= "" then
        name = name .. "|" ..door
    end
    if not getBot():isInWorld(world:upper()) then
        local count = 0
        addEvent(Event.variantlist, function(variant, netid)
            if variant:get(0):getString() == "OnConsoleMessage" then
                if variant:get(1):getString():lower():find("inaccessible.") or variant:get(1):getString():lower():find("unknown reason.") then
                    nuked = true
                end
                if variant:get(1):getString():lower():find("experiencing") or variant:get(1):getString():lower():find("high demand") then
                    subserver = true
                end
                if variant:get(1):getString():lower():find("Too many") then
                    loggoning = true
                end
            end
        end)
        while not getBot():isInWorld(world:upper()) and not loggoning and not subserver and not nuked do
            if getBot():getPing() == 0 then
                getBot():disconnect()
                sleep(1000)
            end
            if getBot().status ~= BotStatus.online then
                customizable.botStatics(""..getBot().name.." status is "..customizable.initBot().."","Status Script : Running")
                while getBot().status ~= BotStatus.online do
                    getBot():connect()
                    if getBot().status == BotStatus.account_banned then
                        customizable.botStatics(""..getBot().name.." status is "..customizable.initBot().."","Status Script : Stopped, Reason : Bot status "..customizable.initBot().."")
                        getBot():stopScript()
                    end
                    if getBot().status == BotStatus.maintenance then
                        sleep(delaymaintenance * 60000)
                    else
                        sleep(delayreconnect * 1000)
                    end
                end
                customizable.botStatics(""..getBot().name.." status is "..customizable.initBot().."","Status Script : Running")
            end
            getBot():sendPacket(3,"action|join_request\nname|"..name.."\ninvitedWorld|0")
            listenEvents(3)
            count = count + 1
            if count < 5 then
                sleep(delaywarp * 1000)
            else
                sleep(delayidiotserver * 60000)
            end
        end
        removeEvents()
        sleep(1000)
    end
    if getBot():isInWorld(world:upper()) then
        if door ~= "" then
            local stuck = 0
            while getTile(getBot().x,getBot().y).fg == 6 and not wrong do
                if getBot():getPing() == 0 then
                    getBot():disconnect()
                    sleep(1000)
                end
                if getBot().status ~= BotStatus.online then
                    customizable.botStatics(""..getBot().name.." status is "..customizable.initBot().."","Status Script : Running")
                    while getBot().status ~= BotStatus.online do
                        getBot():connect()
                        if getBot().status == BotStatus.account_banned then
                            customizable.botStatics(""..getBot().name.." status is "..customizable.initBot().."","Status Script : Stopped, Reason : Bot status "..customizable.initBot().."")
                            getBot():stopScript()
                        end
                        if getBot().status == BotStatus.maintenance then
                            sleep(delaymaintenance * 60000)
                        else
                            sleep(delayreconnect * 1000)
                        end
                    end
                    customizable.botStatics(""..getBot().name.." status is "..customizable.initBot().."","Status Script : Running")
                end
                getBot():sendPacket(3,"action|join_request\nname|"..name.."\ninvitedWorld|0")
                sleep(delaywarp * 1000)
                stuck = stuck + 1
                if stuck == 5 then
                    wrong = true
                end
            end
        end
    end
end

customizable.onStoring = function()
    for i = customizable.indexDrop , #storagedrop do
        print("["..pcallBot.."]Dropping items")
        world = customizable.split(storagedrop[i],"[^|]+")[1]
        door = customizable.split(storagedrop[i],"[^|]+")[2]
        customizable.warp(world,door)
        customizable.initializeBots()
        if not loggoning then
            if not subserver then
                if not nuked then
                    if not wrong then
                        if customizable.itemFloat(itemId[1]) < limit then
                            for y,pack in pairs(itemId) do
                                for i,tile in pairs(getBot():getWorld():getTiles()) do
                                    if separated then
                                        if tile.fg == 0 or tile.bg == 0 then
                                            ::BACK::
                                            getBot():findPath(customizable.initX + (customizable.tileX),customizable.initY)
                                            sleep(100)
                                            local count = 0
                                            customizable.reconnect(world,door,customizable.initX + (customizable.tileX),customizable.initY )
                                            if customizable.initX + (customizable.tileX) >= 98 then
                                                customizable.initY = customizable.initY - 1
                                                customizable.tileX = 0
                                            end
                                            while getBot():getInventory():getItemCount(pack) > 0 do
                                                getBot():drop(pack,200)
                                                sleep(delaydrop * 1000)
                                                customizable.reconnect(world,door,customizable.initX + (customizable.tileX),customizable.initY)
                                                count = count + 1
                                                customizable.tileX = customizable.tileX + 1
                                                goto BACK
                                            end
                                        end
                                    else
                                        if tile.fg == 0 or tile.bg == 0 then
                                            ::BACK::
                                            getBot():findPath(customizable.initX + (customizable.tileX),customizable.initY)
                                            sleep(100)
                                            local count = 0
                                            customizable.reconnect(world,door,customizable.initX + (customizable.tileX),customizable.initY - (y-1))
                                            if customizable.initX + (customizable.tileX) >= 98 then
                                                customizable.initY = customizable.initY - 1
                                                customizable.tileX = 0
                                            end
                                            while getBot():getInventory():getItemCount(pack) > 0 do
                                                getBot():drop(pack,200)
                                                sleep(delaydrop * 1000)
                                                customizable.reconnect(world,door,customizable.initX + (customizable.tileX),customizable.initY - (y-1))
                                                count = count + 1
                                                if count >= 2 then
                                                    customizable.tileX = customizable.tileX + 1
                                                    goto BACK
                                                end
                                            end
                                        end
                                    end
                                    if getBot():getInventory():getItemCount(pack) == 0 then
                                        break
                                    end
                                end
                            end
                            sleep(100)
                            break
                        else
                            initialize[world] = ""..customizable.itemFloat(itemId[1]).."x (LIMIT)"
                            customizable.botStatics("Drop storage : ||"..world.."|| has reached limit, skipped world","Status Script : Running")
                            print("["..pcallBot.."]Drop storage : "..world.."  has reached limit, skipped world")
                            customizable.indexDrop = customizable.indexDrop + 1
                            if customizable.indexDrop > #storagedrop then
                                initialize[world] = ""..customizable.itemFloat(itemId[1]).."x (LIMIT)"
                                customizable.botStatics("All drop storage has reached limit","Status Script : Stopped, Reason : All drop storage is limit")
                                print("["..pcallBot.."]All drop storage has reached limit")
                                customizable.initializeBots()
                                if removingbot then
                                    removeBot()
                                    sleep(2000)
                                end
                                customizable.warp(customizable.randomLetter(),"")
                                getBot():stopScript()
                            end
                            customizable.tileX = 0
                        end
                    else
                        initialize[world] = "WRONG DOOR"
                        wrong = false
                        print("["..pcallBot.."]("..world..") Id door drop storage is wrong, check ur id door!")
                        customizable.botStatics("||"..world.."|| Id door drop storage is wrong, check ur id door!","Status Script : Running")
                        customizable.indexDrop = customizable.indexDrop + 1
                        if customizable.indexDrop > #storagedrop then
                            print("["..pcallBot.."]All drop storage has reached limit")
                            customizable.botStatics("All drop storage has reached limit!","Status Script : Stopped, Reason : All drop storage is limit")
                            if removingbot then
                                removeBot()
                                sleep(2000)
                            end
                            customizable.warp(customizable.randomLetter(),"")
                            getBot():stopScript()
                        end
                        customizable.tileX = 0
                    end
                else
                    initialize[world] = "NUKED"
                    nuked = false
                    print("["..pcallBot.."]("..world..") drop Storage is NUKED, check ur storage!")
                    customizable.botStatics("||"..world.."|| drop Storage is NUKED, check ur storage!","Status Script : Running")
                    customizable.indexDrop = customizable.indexDrop + 1
                    if customizable.indexDrop > #storagedrop then
                        print("["..pcallBot.."]All drop storage has reached limit!")
                        customizable.botStatics("All drop storage has reached limit!","Status Script : Stopped, All drop storage is limit")
                        if removingbot then
                            removeBot()
                            sleep(2000)
                        end
                        customizable.warp(customizable.randomLetter(),"")
                        getBot():stopScript()
                    end
                    customizable.tileX = 0
                end
            else
                subserver = false
                customizable.botStatics(""..getBot().name.." system is subserver, sleeping on "..delayidiotserver.." minutes","Status Script : Running")
                sleep(delayidiotserver * 60000)
            end
        else
            loggoning = false
            customizable.botStatics(""..getBot().name.." system is Too many login, sleeping on "..delayidiotserver.." minutes","Status Script : Running")
            sleep(delayidiotserver * 60000)
        end
    end
    initialize[world] = ""..customizable.itemFloat(itemId[1]).."x"
end

customizable.onTake = function()
    for i = customizable.indexTake, #storagetake do
        print("["..pcallBot.."]Taking items")
        world = customizable.split(storagetake[i],"[^|]+")[1]
        door = customizable.split(storagetake[i],"[^|]+")[2]
        customizable.warp(world,door)
        customizable.initializeBots()
        if not loggoning then
            if not subserver then
                if not nuked then
                    if not wrong then
                        if not looping then
                            if customizable.itemFloat(itemId[1]) > 0 then
                                for _, pack in pairs(itemId) do
                                    for _, object in pairs(getBot():getWorld():getObjects()) do
                                        if object.id == pack then
                                            getBot():findPath(math.floor((object.x)/32), math.floor((object.y)/32))
                                            sleep(100)
                                            getBot():collect(3)
                                            sleep(500)
                                            customizable.reconnect(world,door,math.floor((object.x)/32), math.floor((object.y)/32))
                                        end
                                        if getBot():getInventory():getItemCount(pack) > 0 then
                                            break
                                        end
                                    end
                                end
                                sleep(100)
                                break
                            else
                                initialize[world] = ""..customizable.itemFloat(itemId[1]).."x (EMPTY)"
                                customizable.botStatics("Take storage : ||"..world.."|| has empty, skipped world","Status Script : Running")
                                print("["..pcallBot.."]Take storage : ("..world..") has empty, skipped world")
                                customizable.indexTake = customizable.indexTake + 1
                                if customizable.indexTake > #storagetake then
                                    initialize[world] = ""..customizable.itemFloat(itemId[1]).."x (EMPTY)"
                                    customizable.botStatics("All take storage has empty","Status Script : Stopped, Reason : All storage take is empty")
                                    print("["..pcallBot.."]All take storage has empty")
                                    customizable.initializeBots()
                                    if removingbot then
                                        removeBot()
                                        sleep(2000)
                                    end
                                    customizable.warp(customizable.randomLetter(),"")
                                    getBot():stopScript()
                                end
                            end
                        else
                            for _, pack in pairs(itemId) do
                                for _, object in pairs(getBot():getWorld():getObjects()) do
                                    if object.id == pack then
                                        getBot():findPath(math.floor((object.x)/32), math.floor((object.y)/32))
                                        sleep(100)
                                        getBot():collect(3)
                                        sleep(500)
                                        customizable.reconnect(world,door,math.floor((object.x)/32), math.floor((object.y)/32))
                                    end
                                    if getBot():getInventory():getItemCount(pack) > 0 then
                                        break
                                    end
                                end
                            end
                            sleep(100)
                            break
                        end
                    else
                        initialize[world] = "WRONG DOOR"
                        wrong = false
                        print("["..pcallBot.."]("..world..") Id door take storage is wrong, check ur id door!")
                        customizable.botStatics("||"..world.."|| Id door take storage is wrong, check ur id door!","Status Script : Running")
                        customizable.indexTake = customizable.indexTake + 1
                        if customizable.indexTake > #storagetake then
                            print("["..pcallBot.."]All take storage has empty")
                            customizable.botStatics("All take storage has empty!","Status Script : Stopped, Reason : All storage take is empty")
                            if removingbot then
                                removeBot()
                                sleep(2000)
                            end
                            customizable.warp(customizable.randomLetter(),"")
                            getBot():stopScript()
                        end
                    end
                else
                    initialize[world] = "NUKED"
                    nuked = false
                    print("["..pcallBot.."]("..world..") take Storage is NUKED, check ur storage!")
                    customizable.botStatics("||"..world.."|| take Storage is NUKED, check ur storage!","Status Script : Running")
                    customizable.indexTake = customizable.indexTake + 1
                    if customizable.indexTake > #storagetake then
                        print("["..pcallBot.."]All take storage has empty!")
                        customizable.botStatics("All take storage has empty!","Status Script : Stopped, Reason : All take storage is empty")
                        if removingbot then
                            removeBot()
                            sleep(2000)
                        end
                        customizable.warp(customizable.randomLetter(),"")
                        getBot():stopScript()
                    end
                end
            else
                subserver = false
                customizable.botStatics(""..getBot().name.." system is subserver, sleeping on "..delayidiotserver.." minutes","Status Script : Running")
                sleep(delayidiotserver * 60000)
            end
        else
            loggoning = false
            customizable.botStatics("@everyone",""..getBot().name.." system is Too many login, sleeping on "..delayidiotserver.." minutes","Status Script : Running")
            sleep(delayidiotserver * 60000)
        end
    end
    initialize[world] = ""..customizable.itemFloat(itemId[1]).."x"
end

customizable.realizm = function()
    for idx, val in pairs(itemId) do
        if getBot():getInventory():getItemCount(val) > 0 then
            return true
        end
    end
    return false
end

if Information == "Script Move WTW made by Caramoy Syndicate, Link Server : https://discord.com/invite/fTTKW8vvuq" and scriptVersion == "0.2" then
    getBot().auto_reconnect = false
    while getBot().status ~= BotStatus.online do
        getBot():connect()
        sleep(delayreconnect * 1000)
    end
    sleep(pcallBot * delayexecute * 1000)
    while true do
        if not looping then
            customizable.onTake()
            customizable.onStoring()
        else
            while not customizable.realizm() do
                customizable.onTake()
                sleep(delaylooping * 1000)
            end
            customizable.onStoring()
        end
    end
else
    print("["..pcallBot.."]Script Move WTW made by Caramoy Syndicate, Link Server : https://discord.com/invite/fTTKW8vvuq")
    customizable.botStatics("Script Move WTW made by Caramoy Syndicate, Link Server : https://discord.com/invite/fTTKW8vvuq","Status Script : Stopped, Reason : Reseller idiot")
end
