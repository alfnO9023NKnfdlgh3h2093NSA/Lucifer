for i, bot in pairs(getBots()) do
    if getBot().name:upper() == bot.name:upper() then
        pcallBot = i
    end
end

initialize = {}
local customizable = {
    index = 1,
    indexDrop = 1,
    indexTake = 1,
    tileX = 1,
    initX = posX - 1,
    initY = posY - 1
}

customizable.randomletter = function()
    local letter = ""
    local function stringRandom()
        local random = math.random(1,3)
        if random == 1 then
            return string.char(math.random(97,122))
        elseif random == 2 then
            return string.char(math.random(65,90))
        else
            return string.char(math.random(48,57))
        end
    end
    for i = 1, lettername do
        letter = letter..stringRandom()
    end
    return letter
end

customizable.split = function(str, ptr)
    if not ptr then 
        ptr = "%s"
    end
    local tbl = {}
    for string in string.gmatch(str, ptr) do
        table.insert(tbl, string) 
    end
    return tbl
end

customizable.getEnetBot = function()
    str = ""
    for i, val in pairs(getBots()) do
        if val.status == BotStatus.online then
            enet = "ONLINE"
        elseif val.status == BotStatus.account_banned  then
            enet = "SUSPENDED"
        elseif val.status == BotStatus.error_connecting  then
            enet = "ERCON"
        else
            enet = "DISCONNECT"
        end
        str = str.."\n"..enet.."" 
    end
    return str
end

customizable.botstatus = function()
    str = ""
    for _, bot in pairs(getBots()) do
        str = str.."\n["..bot.level.."]||"..string.upper(bot.name).."||" 
    end
    return str
end

customizable.botworld = function()
    str = ""
    for _, bots in pairs(getBots()) do
        str = str.."\n||"..string.upper(bots:getWorld().name).."||" 
    end
    return str
end

customizable.takename = function()
    str = ""
    for i = 1, #storagetake do
        str = str.."\n||"..string.upper(storagetake[i]).."|| : "..(initialize[storagetake[i]] or "?")..""
    end
    return str
end

customizable.dropname = function()
    str = ""
    for i = 1, #storagedrop do
        str = str.."\n||"..string.upper(storagedrop[i]).."|| : "..(initialize[storagedrop[i]] or "?")..""
    end
    return str
end

customizable.itemFloat = function(id)
    return getBot():getWorld().growscan:getObjects()[id] or 0
end

customizable.webhookinfo = function()
	if botinfo then
        local text = [[
            $webHookUrl = "]]..linkbotinfo..[[/messages/]]..messageidbotinfo..[["
            $payload = @{
                username = "Caramoy's"
                embeds = @(
                    @{
                        title = "Caramoy Syndicate : https://discord.com/invite/fTTKW8vvuq"
                        color = "]]..math.random(111111,999999)..[["
                        fields = @(
                            @{
                                name = "BOTNAME"
                                value = "]]..customizable.botstatus()..[["
                                inline = "true"
                            }
                            @{
                                name = "WORLD"
                                value = "]]..customizable.botworld()..[["
                                inline = "true"
                            }
                            @{
                                name = "STATUS"
                                value = "]]..customizable.getEnetBot()..[["
                                inline = "true"
                            }
                            @{
                                name = "STORAGE TAKE"
                                value = "]]..customizable.takename()..[["
                                inline = "true"
                            }
                            @{
                                name = "STORAGE DROP"
                                value = "]]..customizable.dropname()..[["
                                inline = "true"
                            }
                        )
                        footer = @{
                            text = "[Lucifer] : Move WTW Script`nLast update : ]]..(os.date("!%a %b %d, %Y at %I:%M %p", os.time() + 7 * 60 * 60))..[["
                        }
                    }
                )
            }
            
            [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
            Invoke-RestMethod -Uri $webHookUrl -Body ($payload | ConvertTo-Json -Depth 4) -Method Patch -ContentType 'application/json'
        ]]
        local pipe = io.popen("powershell -command -", "w")
        pipe:write(text)
        pipe:close()
    end
end

customizable.botinfo = function(text)
    if webhookstatus then
        text = [[
            $webHookUrl = "]]..webhookstatuslink..[["
            $payload = @{
                content = "]]..text..[["
            }
            
            [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
            Invoke-RestMethod -Uri $webHookUrl -Body ($payload | ConvertTo-Json -Depth 4) -Method Post -ContentType "application/json"
        ]]
        local file = io.popen("powershell -command -", "w")
        file:write(text)
        file:close()
    end
end

customizable.reconnect = function(world,id,x,y)
    if getBot():getPing() == 0 then
        getBot():disconnect()
        sleep(4000)
    end
    if getBot().status ~= BotStatus.online then
        customizable.botinfo("("..getBot().name..") status is offline @everyone")
        while getBot().status ~= BotStatus.online do
            getBot():connect()
            sleep(delayreconnect)
            if getBot().status == BotStatus.account_banned then
                customizable.botinfo("("..getBot().name..") status is suspended, removing bot @everyone")
                getBot():stopScript()
            end
        end
        local count = 0
        while not getBot():isInWorld(world:upper()) do
            getBot():sendPacket(3,"action|join_request\nname|"..world:upper().."\ninvitedWorld|0")
            sleep(delaywarp)
            if not getBot():isInWorld(world:upper()) then 
                count = count + 1
                if count > 5 then
                    customizable.botinfo("("..getBot().name..") Failed to joining world again, terminated script @everyone")
                    getBot():stopScript()
                end
            end
        end
        if id ~= "" then
            local stuck = 0
            while getTile(getBot().x,getBot().y).fg == 6 do
                getBot():sendPacket(3,"action|join_request\nname|" ..world:upper().."|"..id:upper().."\ninvitedWorld|0")
                sleep(delaywarp)
                if stuck > 3 then
                    customizable.botinfo("("..getBot().name..") Failed to reconnecting bot, stuck at white door. Terminated script @everyone")
                    getBot():stopScript()
                end
            end
        end
        if x and y then
            while getBot().x ~= x or getBot().y ~= y do
                getBot():findPath(x,y)
                sleep(150)
            end
        end
        customizable.botinfo("("..getBot().name..") status is online @everyone")
    end
end

customizable.warp = function(world,door,cooldown)
    name = world
    if door ~= "" then
        name = name .. "|" ..door
    end
    if not getBot():isInWorld(world:upper()) then
        addEvent(Event.variantlist, function(variant, netid)
            if variant:get(0):getString() == "OnConsoleMessage" then
                if variant:get(1):getString():lower():find("inaccessible.") then
                    nuked = true
                end
            end
        end)
        while not getBot():isInWorld(world:upper()) and not nuked do
            if getBot():getPing() == 0 then
                getBot():disconnect()
                sleep(2000)
            end
            if getBot().status ~= BotStatus.online then
                setting.botinfo("("..getBot().name..") status is offline @everyone")
                while getBot().status ~= BotStatus.online do
                    getBot():connect()
                    sleep(delayreconnect)
                    if getBot().status == BotStatus.account_banned then
                        setting.botinfo("("..getBot().name..") status is suspended, removing bot @everyone")
                        getBot():stopScript()
                    end
                end
                setting.botinfo("("..getBot().name..") status is online @everyone")
            end
            getBot():sendPacket(3,"action|join_request\nname|"..name.."\ninvitedWorld|0")
            listenEvents(8)
            sleep(cooldown)
        end
        removeEvents()
        sleep(2000)
    end
    if getBot():isInWorld(world:upper()) then
        if door ~= "" then
            local stuck = 0
            while getTile(getBot().x,getBot().y).fg == 6 and not wrong do
                if getBot():getPing() == 0 then
                    getBot():disconnect()
                    sleep(4000)
                end
                if getBot().status ~= BotStatus.online then
                    setting.botinfo("("..getBot().name..") status is offline @everyone")
                    while getBot().status ~= BotStatus.online do
                        getBot():connect()
                        sleep(delayreconnect)
                        if getBot().status == BotStatus.account_banned then
                            setting.botinfo("("..getBot().name..") status is suspended, removing bot @everyone")
                            getBot():stopScript()
                        end
                    end
                    setting.botinfo("("..getBot().name..") status is online @everyone")
                end
                getBot():sendPacket(3,"action|join_request\nname|"..name.."\ninvitedWorld|0")
                sleep(cooldown)
                stuck = stuck + 1
                if stuck == 5 then
                    wrong = true
                end
            end
        end
    end
end

customizable.storingitems = function()
    for i = customizable.indexDrop , #storagedrop do
        print("["..pcallBot.."]Dropping items")
        world = storagedrop[i]
        customizable.warp(world,doorstoragedrop)
        customizable.webhookinfo()
        if not nuked then
            if not wrong then
                if customizable.itemFloat(itemId[1]) >= limit then
                    initialize[world] = ""..customizable.itemFloat(itemId[1]).."x (LIMIT)"
                    customizable.botinfo("Drop storage : "..world.." has reached limit, skipped world @everyone")
                    print("["..pcallBot.."]Drop storage : "..world.."  has reached limit, skipped world")
                    customizable.indexDrop = customizable.indexDrop + 1
                    if customizable.indexDrop > #storagedrop then
                        initialize[world] = ""..customizable.itemFloat(itemId[1]).."x (LIMIT)"
                        customizable.botinfo("All drop storage has reached limit, Removing bot : ("..getBot().name..") @everyone")
                        print("["..pcallBot.."]All drop storage has reached limit, Removing bot : ("..getBot().name..")")
                        customizable.webhookinfo()
                        if removingbot then
                            removeBot()
                            sleep(2000)
                        end
                        getBot():stopScript()
                    end
                    customizable.tileX = 0
                else
                    for y,pack in pairs(itemId) do
                        for i,tile in pairs(getBot():getWorld():getTiles()) do
                            if separated then
                                if tile.fg == 0 or tile.bg == 0 then
                                    ::BACK::
                                    getBot():findPath(customizable.initX + (customizable.tileX),customizable.initY - (y-1))
                                    sleep(1000)
                                    local count = 0
                                    customizable.reconnect(world,doorstoragedrop,customizable.initX + (customizable.tileX),customizable.initY - (y-1))
                                    if customizable.initX + (customizable.tileX) >= 98 then
                                        customizable.initY = customizable.initY - 1
                                        customizable.tileX = 0
                                    end
                                    while getBot():getInventory():getItemCount(pack) > 0 do
                                        getBot():drop(pack,200)
                                        sleep(delaydrop)
                                        customizable.reconnect(world,doorstoragedrop,customizable.initX + (customizable.tileX),customizable.initY - (y-1))
                                        count = count + 1
                                        if count >= 2 then
                                            customizable.tileX = customizable.tileX + 1
                                            goto BACK
                                        end
                                    end
                                end
                            else
                                if tile.fg == 0 or tile.bg == 0 then
                                    ::BACK::
                                    getBot():findPath(customizable.initX + (customizable.tileX),customizable.initY)
                                    sleep(1000)
                                    local count = 0
                                    customizable.reconnect(world,doorstoragedrop,customizable.initX + (customizable.tileX),customizable.initY - (y-1))
                                    if customizable.initX + (customizable.tileX) >= 98 then
                                        customizable.initY = customizable.initY - 1
                                        customizable.tileX = 0
                                    end
                                    while getBot():getInventory():getItemCount(pack) > 0 do
                                        getBot():drop(pack,200)
                                        sleep(delaydrop)
                                        customizable.reconnect(world,doorstoragedrop,customizable.initX + (customizable.tileX),customizable.initY - (y-1))
                                        count = count + 1
                                        if count >= 2 then
                                            customizable.tileX = customizable.tileX + 1
                                            goto BACK
                                        end
                                    end
                                end
                            end
                            if getBot():getInventory():getItemCount(pack) == 0 then
                                break
                            end
                        end
                    end
                    sleep(100)
                    break
                end
            else
                initialize[world] = "WRONG DOOR"
                wrong = false
                print("["..pcallBot.."]("..world..") Id door drop storage is wrong, check ur id door!")
                customizable.botinfo("("..world..") Id door drop storage is wrong, check ur id door! @everyone")
                customizable.indexDrop = customizable.indexDrop + 1
                if customizable.indexDrop > #storagedrop then
                    print("["..pcallBot.."]All drop storage has reached limit")
                    customizable.botinfo("All drop storage has reached limit! Removing bot : ("..getBot().name..") @everyone")
                    if removingbot then
                        removeBot()
                        sleep(2000)
                    end
                    getBot():stopScript()
                end
                customizable.tileX = 0
            end
        else
            initialize[world] = "NUKED"
            nuked = false
            print("["..pcallBot.."]("..world..") drop Storage is NUKED, check ur storage!")
            customizable.botinfo("("..world..") drop Storage is NUKED, check ur storage! @everyone")
            customizable.indexDrop = customizable.indexDrop + 1
            if customizable.indexDrop > #storagedrop then
                print("["..pcallBot.."]All drop storage has reached limit!")
                customizable.botinfo("All drop storage has reached limit! Removing bot : ("..getBot().name..") @everyone")
                if removingbot then
                    removeBot()
                    sleep(2000)
                end
                getBot():stopScript()
            end
            customizable.tileX = 0
        end
    end
    initialize[world] = ""..customizable.itemFloat(itemId[1]).."x"
end

customizable.takestorage = function()
    for i = customizable.indexTake, #storagetake do
        print("["..pcallBot.."]Taking items")
        world = storagetake[i]
        customizable.warp(world,doorstoragetake)
        customizable.webhookinfo()
        if not nuked then
            if not wrong then
                if customizable.itemFloat(itemId[1]) == 0 and not looping then
                    initialize[world] = ""..customizable.itemFloat(itemId[1]).."x (EMPTY)"
                    customizable.botinfo("Take storage : ("..world..") has empty, skipped world @everyone")
                    print("["..pcallBot.."]Take storage : ("..world..") has empty, skipped world")
                    customizable.indexTake = customizable.indexTake + 1
                    if customizable.indexTake > #storagetake then
                        initialize[world] = ""..customizable.itemFloat(itemId[1]).."x (EMPTY)"
                        customizable.botinfo("All take storage has empty, Removing bot : ("..getBot().name..") @everyone")
                        print("["..pcallBot.."]All take storage has empty, Removing bot : ("..getBot().name..")")
                        customizable.webhookinfo()
                        if removingbot then
                            removeBot()
                            sleep(2000)
                        end
                        getBot():stopScript()
                    end
                else
                    if not looping then
                        for _, pack in pairs(itemId) do
                            for _, object in pairs(getBot():getWorld():getObjects()) do
                                if object.id == pack then
                                    getBot():findPath(math.floor((object.x)/32), math.floor((object.y)/32))
                                    sleep(1000)
                                    getBot():collect(3)
                                    sleep(1000)
                                    customizable.reconnect(world,doorstoragetake,math.floor((object.x)/32), math.floor((object.y)/32))
                                end
                                if getBot():getInventory():getItemCount(pack) > 0 then
                                    break
                                end
                            end
                        end
                        sleep(100)
                        break
                    else
                        for _, pack in pairs(itemId) do
                            while getBot():getInventory():getItemCount(pack) == 0 do
                                for _, object in pairs(getBot():getWorld():getObjects()) do
                                    if object.id == pack then
                                        getBot():findPath(math.floor((object.x)/32), math.floor((object.y)/32))
                                        sleep(1000)
                                        getBot():collect(3)
                                        sleep(1000)
                                        customizable.reconnect(world,doorstoragetake,math.floor((object.x)/32), math.floor((object.y)/32))
                                    end
                                    if getBot():getInventory():getItemCount(pack) > 0 then
                                        break
                                    else
                                        sleep(delaylooping)
                                    end
                                end
                            end
                        end
                        sleep(100)
                        break
                    end
                end
            else
                initialize[world] = "WRONG DOOR"
                wrong = false
                print("["..pcallBot.."]("..world..") Id door take storage is wrong, check ur id door!")
                customizable.botinfo("("..world..") Id door take storage is wrong, check ur id door! @everyone")
                customizable.indexTake = customizable.indexTake + 1
                if customizable.indexTake > #storagetake then
                    print("["..pcallBot.."]All take storage has empty")
                    customizable.botinfo("All take storage has empty! Removing bot : ("..getBot().name..") @everyone")
                    if removingbot then
                        removeBot()
                        sleep(2000)
                    end
                    getBot():stopScript()
                end
            end
        else
            initialize[world] = "NUKED"
            nuked = false
            print("["..pcallBot.."]("..world..") take Storage is NUKED, check ur storage!")
            customizable.botinfo("("..world..") take Storage is NUKED, check ur storage! @everyone")
            customizable.indexTake = customizable.indexTake + 1
            if customizable.indexTake > #storagetake then
                print("["..pcallBot.."]All take storage has empty!")
                customizable.botinfo("All take storage has empty! Removing bot : ("..getBot().name..") @everyone")
                if removingbot then
                    removeBot()
                    sleep(2000)
                end
                getBot():stopScript()
            end
        end
    end
    initialize[world] = ""..customizable.itemFloat(itemId[1]).."x"
end

customizable.main = function()
    if typeaccount == "guest" then
        for i,bot in pairs(botList) do
            local derr = {}
            for id in bot:gmatch("([^|]+)") do 
                table.insert(derr, id) 
            end
            x = derr[1]
            y = derr[2]
            addBot(""..customizable.randomletter().."",x,y)
            sleep(delayloginbot)
        end
    elseif typeaccount == "normal" then
        for i,list in pairs(botList) do
            local derr = {}
            for id in list:gmatch("([^|]+)") do 
                table.insert(derr, id) 
            end
            x = derr[1]
            y = derr[2]
            addBot(x,y)
            sleep(delayloginbot)
        end
    end
    print("Please select all and re-execute script")
end

customizable.setauth = function()
    if not pcallBot and proxyServerDatabase then
        getProxyManager().custom_http_proxy = true
        getProxyManager().http_cooldown = delayDataBase
        if useDatabaseForMainProxy then
            getProxyManager().use_main_ip = true
        end
        if setDatabaseType == "http" then
            addDataProxy(proxyDatabase, Proxy.http) 
        elseif setDatabaseType == "https" then
            addDataProxy(proxyDatabase, Proxy.https)
        elseif setDatabaseType == "socks" then
            addDataProxy(proxyDatabase, Proxy.socks5)
        end
    end
    if not pcallBot and withproxy then
        getProxyManager():setLimit(botperproxy)
        for _, lists in pairs(proxyList) do
            getProxyManager():addProxy(lists)
        end
    end
end

if Information == "Script Move WTW made by Caramoy Syndicate, Link Server : https://discord.com/invite/fTTKW8vvuq" and scriptVersion == "0.1" then
    if autologin and not pcallBot then
        customizable.setauth()
        customizable.main()
    end
    getBot().auto_reconnect = false
    while getBot().status ~= BotStatus.online do
        getBot():connect()
        sleep(delayreconnect)
    end
    sleep(pcallBot * delayexecute)
    while true do
        customizable.takestorage()
        customizable.storingitems()
    end
else
    print("["..pcallBot.."]Script Move WTW made by Caramoy Syndicate, Link Server : https://discord.com/invite/fTTKW8vvuq")
    customizable.botinfo("Script Move WTW made by Caramoy Syndicate, Link Server : https://discord.com/invite/fTTKW8vvuq")
end
