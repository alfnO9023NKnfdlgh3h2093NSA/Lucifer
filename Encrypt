for idx, bot in pairs(getBots()) do
    if getBot().name:upper() == bot.name:upper() then
        pcallBot = idx
    end
end

local bot = getBot()
local inventory = bot:getInventory()
local printed = getBot():getLog()
bot.auto_collect = false
bot.auto_reconnect = false
initialize = {}
local customizable = {
    index = 1,
    indexDrop = 1,
    indexTake = 1,
    tileX = 0,
    initX = posX - 1,
    initY = posY - 1
}

customizable.notifications = function(text)
    messageBox = MessageBox.new()
    messageBox.title = 'Caramoy Syndicate'
    messageBox.description = text
    messageBox:send()
end

customizable.textInfo = function(str,alphabet)
    printed:append(alphabet)
    customizable.initializeBots('('..string.upper(bot.name)..') '..alphabet)
    if str == 'stop' then
        customizable.notifications(string.upper(bot.name)..' : '..alphabet)
        error(alphabet)
    end
end

customizable.randomLetter = function()
    local withnum = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'
    local generate = ''
    for i = 1, 10 do
        local randomnumber = math.random(1,#withnum)
        local random = string.sub(withnum,randomnumber,randomnumber)
        generate = generate .. random
    end
    return generate
end

customizable.split = function(str,ptr)
    if not ptr then
        ptr = '%s'
    end
    local tbl = {}
    for string in string.gmatch(str,ptr) do
        table.insert(tbl,string)
    end
    return tbl
end

customizable.enet = function()
    if bot.status == BotStatus.online then
        return 'Online'
    elseif bot.status == BotStatus.account_banned then
        return 'Suspended'
    elseif bot.status == BotStatus.error_connecting then
        return 'Ercon'
    elseif bot.status == BotStatus.maintenance then
        return 'Maintenance'
    elseif bot.status == BotStatus.changing_subserver then
        return 'Changing Subserver'
    elseif bot.status == BotStatus.location_banned then
        return 'Locban'
    else
        return 'Offline'
    end
end

customizable.worldStorage = function(ptr)
    str = ''
    if ptr == 'take' then
        for i = 1, #storagetake do
            local world = customizable.split(storagetake[i],'[^|]+')[1]
            str = str..'\n||'..world..'|| : '..(initialize[world] or '?')..''
        end
    elseif ptr == 'drop' then
        for i = 1, #storagedrop do
            local world = customizable.split(storagedrop[i],'[^|]+')[1]
            str = str..'\n||'..world..'|| : '..(initialize[world] or '?')..''
        end
    end
    return str
end

customizable.itemFloat = function(id)
    return bot:getWorld().growscan:getObjects()[id] or 0
end

customizable.storageInfo = function()
	if linkbotinfo ~= 'x' then
        local webhook = Webhook.new(linkbotinfo)
        webhook.embed1.use = true
        webhook.embed1.title = 'Caramoy Syndicate [https://discord.com/invite/fTTKW8vvuq]'
        webhook.embed1.color = math.random(111111,999999)
        webhook.embed1:addField('World Take',customizable.worldStorage('take'),true)
        webhook.embed1:addField('World Drop',customizable.worldStorage('drop'),true)
        webhook.embed1.footer.text = '[Lucifer] : Move WTW Script\nLast update : '..(os.date('!%a %b %d, %Y at %I:%M %p', os.time() + 7 * 60 * 60))..''
        webhook:edit(messageidbotinfo)
    end
end

customizable.initializeBots = function(text)
    if webhookstatuslink ~= 'x'  then
        local webhook = Webhook.new(webhookstatuslink)
        webhook.content = '@everyone'
        webhook.embed1.use = true
        webhook.embed1:addField('',text,false)
        webhook.embed1.footer.text = 'Webhook Status, sent at : '..(os.date('!%a %b %d, %Y at %I:%M %p', os.time() + 7 * 60 * 60))..''
        webhook:send()
    end
end

customizable.reconnect = function(world,id,x,y)
    if not bot:isInWorld(world:upper()) or bot.status ~= BotStatus.online then
        customizable.textInfo('','status is '..customizable.enet()..' Current : '..bot:getWorld().name..'')
        while bot.status ~= BotStatus.online do
            bot:connect()
            if bot.status == BotStatus.account_banned then
                customizable.textInfo('stop','status is '..customizable.enet()..', Script terminated.')
            else
                if bot.status == BotStatus.maintenance then
                    sleep(delaymaintenance * 60000)
                else
                    sleep(delayreconnect * 1000)
                end
            end
        end
        while not bot:isInWorld(world:upper()) do
            bot:warp(world:upper())
            sleep(delaywarp * 1000)
        end
        if id ~= '' then
            while getTile(bot.x,bot.y).fg == 6 do
                bot:warp(world:upper(),id:upper())
                sleep(delaywarp * 1000)
            end
        end
        if x and y then
            while bot.x ~= x or bot.y ~= y do
                bot:findPath(x,y)
                sleep(150)
            end
        end
        customizable.textInfo('','status is '..customizable.enet()..' Current : '..bot:getWorld().name..'')
    end
end

customizable.warp = function(world,door)
    name = world
    if door ~= '' then
        name = name .. '|' ..door
    end
    if not bot:isInWorld(world:upper()) then
        local count = 0
        addEvent(Event.variantlist, function(variant, netid)
            if variant:get(0):getString() == 'OnConsoleMessage' then
                if variant:get(1):getString():lower():find('inaccessible.') or variant:get(1):getString():lower():find('unknown reason.') then
                    nuked = true
                end
            end
        end)
        while not bot:isInWorld(world:upper()) and not nuked do
            if bot.status ~= BotStatus.online then
                customizable.textInfo('','status is '..customizable.enet()..'')
                while bot.status ~= BotStatus.online do
                    bot:connect()
                    if bot.status == BotStatus.account_banned then
                        customizable.textInfo('stop','status is '..customizable.enet()..', Script terminated.')
                    end
                    if bot.status == BotStatus.maintenance then
                        sleep(delaymaintenance * 60000)
                    else
                        sleep(delayreconnect * 1000)
                    end
                end
                customizable.textInfo('','status is '..customizable.enet()..'')
            end
            bot:warp(name)
            listenEvents(delaywarp)
            count = count + 1
            if count == 5 then
                count = 0
                customizable.textInfo('','Maybe hard warp?, disconnecting bot and sleeping for '..delayidiotserver..' minutes')
                bot:disconnect()
                sleep(delayidiotserver * 60000)
            end
        end
        removeEvents()
        sleep(1000)
    end
    if bot:isInWorld(world:upper()) then
        if door ~= '' then
            local stuck = 0
            while getTile(bot.x,bot.y).fg == 6 and not wrong do
                if bot.status ~= BotStatus.online then
                    customizable.textInfo('','status is '..customizable.enet()..'')
                    while bot.status ~= BotStatus.online do
                        bot:connect()
                        if bot.status == BotStatus.account_banned then
                            customizable.textInfo('stop','status is '..customizable.enet()..', Script terminated.')
                        end
                        if bot.status == BotStatus.maintenance then
                            sleep(delaymaintenance * 60000)
                        else
                            sleep(delayreconnect * 1000)
                        end
                    end
                    customizable.textInfo('','status is '..customizable.enet()..'')
                end
                bot:warp(name)
                sleep(delaywarp * 1000)
                stuck = stuck + 1
                if stuck == 5 then
                    wrong = true
                end
            end
        end
    end
end

customizable.floatDetect = function(x,y)
    local stack = 0, 0
    for _,obj in pairs(getObjects()) do
        if math.floor(obj.x / 32) == x and math.floor(obj.y / 32) == y then
            stack = stack + 1
        end
    end
    if stack >= 1 then
        return true
    end
    return false
end

customizable.dropItem = function()
    for i = customizable.indexDrop , #storagedrop do
        printed:append('Dropping item')
        world = customizable.split(storagedrop[i],'[^|]+')[1]
        door = customizable.split(storagedrop[i],'[^|]+')[2]
        customizable.warp(world,door)
        if not nuked then
            if not wrong then
                customizable.storageInfo()
                if customizable.itemFloat(itemId[1]) >= limit then
                    initialize[world] = ''..customizable.itemFloat(itemId[1])..'x (LIMIT)'
                    customizable.textInfo('','Storage drop : '..world..' has reached limit, Skipped world')
                    customizable.indexDrop = customizable.indexDrop + 1
                    customizable.tileX = 0
                    if customizable.indexDrop > #storagedrop then
                        initialize[world] = ''..customizable.itemFloat(itemId[1])..'x (LIMIT)'
                        customizable.storageInfo()
                        if removingbot then
                            removeBot()
                            sleep(2000)
                        else
                            customizable.warp(customizable.randomLetter(),'')
                        end
                        customizable.textInfo('stop','All storage drop are limit, Script terminated.')
                    end
                else
                    for y, pack in pairs(itemId) do
                        for i, tile in pairs(bot:getWorld():getTiles()) do
                            if separated then
                                if #itemId == 1 then
                                    if tile.fg == 0 then
                                        ::back::
                                        bot:findPath(customizable.initX + (customizable.tileX),customizable.initY)
                                        sleep(100)
                                        customizable.reconnect(world,door,customizable.initX + (customizable.tileX),customizable.initY)
                                        if customizable.initX + (customizable.tileX) >= 98 then
                                            customizable.initY = customizable.initY - 1
                                            customizable.tileX = 0
                                        end
                                        if customizable.floatDetect(bot.x -1, bot.y) then
                                            customizable.tileX = customizable.tileX + 1
                                            goto back
                                        end
                                        while inventory:getItemCount(pack) > 0 do
                                            bot:setDirection(true)
                                            sleep(100)
                                            bot:drop(pack,200)
                                            sleep(delaydrop * 1000)
                                            customizable.reconnect(world,door,customizable.initX + (customizable.tileX),customizable.initY)
                                        end
                                    end
                                else
                                    if tile.fg == 0 then
                                        ::back::
                                        bot:findPath(customizable.initX + (customizable.tileX),customizable.initY - (y-1))
                                        sleep(100)
                                        customizable.reconnect(world,door,customizable.initX + (customizable.tileX),customizable.initY - (y-1))
                                        if customizable.initX + (customizable.tileX) >= 98 then
                                            customizable.initY = customizable.initY - #itemId
                                            customizable.tileX = 0
                                        end
                                        if customizable.floatDetect(bot.x -1, bot.y) then
                                            customizable.tileX = customizable.tileX + 1
                                            goto back
                                        end
                                        while inventory:getItemCount(pack) > 0 do
                                            bot:setDirection(true)
                                            sleep(100)
                                            bot:drop(pack,200)
                                            sleep(delaydrop * 1000)
                                            customizable.reconnect(world,door,customizable.initX + (customizable.tileX),customizable.initY - (y-1))
                                        end
                                    end
                                end
                            else
                                if tile.fg == 0 then
                                    ::back::
                                    bot:findPath(customizable.initX + (customizable.tileX),customizable.initY)
                                    sleep(100)
                                    local count = 0
                                    customizable.reconnect(world,door,customizable.initX + (customizable.tileX),customizable.initY)
                                    if customizable.initX + (customizable.tileX) >= 98 then
                                        customizable.initY = customizable.initY - 1
                                        customizable.tileX = 0
                                    end
                                    while inventory:getItemCount(pack) > 0 do
                                        bot:setDirection(true)
                                        sleep(100)
                                        bot:drop(pack,200)
                                        sleep(delaydrop * 1000)
                                        customizable.reconnect(world,door,customizable.initX + (customizable.tileX),customizable.initY)
                                        count = count + 1
                                        if count >= 2 then
                                            count = 0
                                            customizable.tileX = customizable.tileX + 1
                                            goto back
                                        end
                                    end
                                end
                            end
                            if inventory:getItemCount(pack) == 0 then
                                break
                            end
                        end
                    end
                    sleep(100)
                    break
                end
            else
                initialize[world] = 'Wrong Door'
                wrong = false
                customizable.textInfo('','Storage drop : '..world..' is wrong door, Skipped world')
                customizable.indexDrop = customizable.indexDrop + 1
                customizable.tileX = 0
                if customizable.indexDrop > #storagedrop then
                    if removingbot then
                        removeBot()
                        sleep(2000)
                    else
                        customizable.warp(customizable.randomLetter(),'')
                    end
                    customizable.storageInfo()
                    customizable.textInfo('stop','All storage drop has reached limit')
                end
            end
        else
            initialize[world] = 'Nuked'
            nuked = false
            customizable.textInfo('','storage drop : '..world..' is NUKED, Skipped world')
            customizable.indexDrop = customizable.indexDrop + 1
            customizable.tileX = 0
            if customizable.indexDrop > #storagedrop then
                if removingbot then
                    removeBot()
                    sleep(2000)
                else
                    customizable.warp(customizable.randomLetter(),'')
                end
                customizable.storageInfo()
                customizable.textInfo('stop','All storage drop has reached limit!')
            end
        end
    end
    initialize[world] = ''..customizable.itemFloat(itemId[1])..'x'
end

customizable.takeItem = function()
    printed:append('Taking item')
    ::backs::
    for i = customizable.indexTake, #storagetake do
        world = customizable.split(storagetake[i],'[^|]+')[1]
        door = customizable.split(storagetake[i],'[^|]+')[2]
        customizable.warp(world,door)
        if not nuked then
            if not wrong then
                customizable.storageInfo()
                if customizable.itemFloat(itemId[1]) == 0 then
                    initialize[world] = ''..customizable.itemFloat(itemId[1])..'x (EMPTY)'
                    if not looping then
                        customizable.textInfo('','Storage take : '..world..' are empty, Skipped world')
                        customizable.indexTake = customizable.indexTake + 1
                        if customizable.indexTake > #storagetake then
                            initialize[world] = ''..customizable.itemFloat(itemId[1])..'x (EMPTY)'
                            customizable.storageInfo()
                            if removingbot then
                                removeBot()
                                sleep(2000)
                            else
                                customizable.warp(customizable.randomLetter(),'')
                            end
                            customizable.textInfo('stop','All take storage has empty')
                        end
                    else
                        if #storagetake == 1 then
                            sleep(delaylooping * 1000)
                            goto backs
                        else
                            sleep(delaylooping * 1000)
                            customizable.indexTake = customizable.indexTake + 1
                            if customizable.indexTake > #storagetake then
                                customizable.indexTake = 1
                                goto backs
                            end
                        end
                    end
                else
                    for _, pack in pairs(itemId) do
                        local count = 0
                        while inventory:getItemCount(pack) < amountTake do
                            for _, object in pairs(bot:getWorld():getObjects()) do
                                if object.id == pack then
                                    bot:findPath(math.floor((object.x)/32), math.floor((object.y)/32))
                                    sleep(100)
                                    bot:collect(3)
                                    sleep(500)
                                    customizable.reconnect(world,door,math.floor((object.x)/32), math.floor((object.y)/32))
                                    break
                                end
                            end
                            if inventory:getItemCount(pack) >= amountTake then
                                break
                            else
                                count = count + 1
                                if count == 3 then
                                    break
                                end
                            end
                        end
                    end
                    sleep(100)
                    break
                end
            else
                initialize[world] = 'Wrong Door'
                wrong = false
                customizable.textInfo('','Storage take : '..world..' is wrong door id, Skipped world')
                customizable.indexTake = customizable.indexTake + 1
                if customizable.indexTake > #storagetake then
                    if removingbot then
                        removeBot()
                        sleep(2000)
                    else
                        customizable.warp(customizable.randomLetter(),'')
                    end
                    customizable.storageInfo()
                    customizable.textInfo('stop','All take storage has empty')
                end
            end
        else
            initialize[world] = 'Nuked'
            nuked = false
            customizable.textInfo('','Storage take : '..world..' NUKED, Skipped world.')
            customizable.indexTake = customizable.indexTake + 1
            if customizable.indexTake > #storagetake then
                if removingbot then
                    removeBot()
                    sleep(2000)
                else
                    customizable.warp(customizable.randomLetter(),'')
                end
                customizable.storageInfo()
                customizable.textInfo('stop','All take storage has empty!')
            end
        end
    end
    initialize[world] = ''..customizable.itemFloat(itemId[1])..'x'
end

if Information == 'Script Move WTW made by Caramoy Syndicate, Link Server : https://discord.com/invite/fTTKW8vvuq' and scriptVersion == 'final_version[0.1]' then
    sleep(pcallBot * delayexecute * 1000)
    while true do
        customizable.takeItem()
        customizable.dropItem()
    end
else
    customizable.textInfo('stop','Script Move WTW made by Caramoy Syndicate, Link Server : https://discord.com/invite/fTTKW8vvuq. Reseller IDIOT !!')
end
